{"mappings":"qLAIAA,eAAeC,EAAaC,GACxB,MAAMC,QAAcC,IAEpB,OADAC,QAAQC,IAAIH,GAgDhB,SAAsBA,EAAmBD,GACrC,IAAIK,EAAY,CAAC,EAGjB,GAFAF,QAAQC,IAAIH,GACZE,QAAQC,IAAI,cACE,OAAVH,EACA,IAAK,MAAMK,KAAQL,EACJ,OAARK,GACKA,EAAK,WAAgBN,EAAQ,UAAeM,EAAK,WAAgBN,EAAQ,WACzEG,QAAQC,IAAI,eACZC,EAAYC,EACZH,QAAQC,IAAIC,SAMxBF,QAAQC,IAAI,kBAEhB,OAAOC,CACX,CAlEWE,CAAaN,EAAOD,EAC/B,CAGAF,eAAeI,IACX,MACMM,QAAiBC,MADH,sFAGpB,aADoBD,EAASE,MAEjC,CA4DAZ,eAAea,EAAYX,GACvB,MAAMC,QAAcC,IACpB,IAAIU,EAAgB,EACN,OAAVX,IACAW,EAAQX,EAAMY,QAGlB,MAAMC,EAAc,iFAAiFF,SAC/FG,EAAO,CACTC,OAAQ,MACRC,KAAMC,KAAKC,UAAUnB,GACrBoB,QAAS,CACL,eAAgB,oCAKlBC,SADiBZ,MAAMK,EAAKC,IACZL,OACtBP,QAAQC,IAAIiB,EAChB,C,gUC3FA,MAAMC,EAAqB,CAC3BA,MAAmB,IAEnBC,SAASC,cAAc,YAAYC,iBAAiB,SAAS,KACzDC,SAASC,QAAQ,kBAGrBJ,SAASK,iBAAiB,qBAAqBC,SAAQC,IACnDA,EAAIL,iBAAiB,SAAS,KAC1BtB,QAAQC,IAAI0B,EAAIC,eACU,OAAtBD,EAAIC,gBACJT,EAAQ,OAAYQ,EAAIC,cAAa,GAE7C,IAIiBR,SAASC,cAAc,kBAC/BC,iBAAiB,UAAUO,IACpCA,EAAEC,iBACFV,SAASK,iBAAiB,SAASC,SAAQK,IACnB,OAAhBA,EAAMC,OAAkC,KAAhBD,EAAMC,QAC9Bb,EAAQY,EAAME,MAAQF,EAAMC,MAAK,IAS7CrC,eAA+BE,GAC3B,MAAMqC,QAA0BtC,EAAaC,GAC7CG,QAAQC,IAAI,WAAU,EAAAkC,EAAAC,SAAQF,KACzB,EAAAC,EAAAC,SAAQF,GASTlC,QAAQC,IAAI,wBARZO,EAAYX,GAGZwC,YAAW,KACPd,SAASC,QAAQ,mBAClB,KAKX,CAnBIc,CAAgBnB,EAAA","sources":["src/modules/firebase.ts","src/modules/register.ts"],"sourcesContent":["import { User } from \"./User\";\r\nimport { Post, UserInfo, UserInput } from \"./interfaces\";\r\n\r\n\r\nasync function findUserInDb(userObj: UserInput): Promise<boolean | Object> {\r\n    const users = await getAllUsers();\r\n    console.log(users);\r\n    return validateUser(users, userObj);\r\n}\r\n\r\n\r\nasync function getAllUsers(): Promise<UserInfo[]> {\r\n    const url: string = 'https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users.json';\r\n    const response = await fetch(url);\r\n    const users = await response.json();\r\n    return users;\r\n}\r\n\r\n\r\nasync function getUserIndex(user: User): Promise<any> {\r\n    const allUsers = await getAllUsers();\r\n    for (let i: number = 0; i < allUsers.length; i++) {\r\n      const currentUser = allUsers[i];\r\n      if (currentUser && user !== undefined && currentUser.userName === user.getUserName()) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\nasync function getPostsFromDb(index: number): Promise<Post[]> {\r\n    console.log(index);\r\n    const postUrl = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${index}/posts.json`;\r\n    const response = await fetch(postUrl);\r\n    const posts = await response.json();\r\n    console.log(posts);\r\n    return posts;\r\n}\r\n\r\nasync function addPostsToDb(userIndex: number, posts: Post[]) {\r\n    const url = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${userIndex}/posts.json`;\r\n    const init = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(posts),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    }\r\n\r\n    const response = await fetch(url, init);\r\n    const data = response.json();\r\n    console.log(data);\r\n}\r\n\r\n\r\nfunction validateUser(users: UserInfo[], userObj: UserInput): Object {\r\n    let userFound = {};\r\n    console.log(users);\r\n    console.log('VALIDATION');\r\n    if (users !== null) {\r\n        for (const user of users) {\r\n            if(user!== null){\r\n                if (user[\"userName\"] === userObj[\"userName\"] && user[\"password\"] === userObj[\"password\"]) {\r\n                    console.log('User found!');\r\n                    userFound = user;\r\n                    console.log(userFound);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        console.log('user not found');\r\n    }\r\n    return userFound;\r\n}\r\n\r\n\r\nasync function addUserToDb(userObj: UserInput) {\r\n    const users = await getAllUsers();\r\n    let index: number = 0;\r\n    if (users !== null) {\r\n        index = users.length;\r\n    }\r\n\r\n    const url: string = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${index}.json`;\r\n    const init = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(userObj),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    }\r\n\r\n    const response = await fetch(url, init);\r\n    const data = response.json();\r\n    console.log(data);\r\n}\r\n\r\n\r\nasync function deleteAccount(user: User) {\r\n    const index = await getUserIndex(user);\r\n    const url = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${index}.json`;\r\n    fetch(url, {\r\n        method: 'DELETE',\r\n    });\r\n}\r\n\r\n\r\nexport { findUserInDb, addUserToDb, getAllUsers, getUserIndex, getPostsFromDb, addPostsToDb, deleteAccount };","import { findUserInDb, addUserToDb } from \"../modules/firebase\";\r\nimport { isEmpty } from \"../index\";\r\nimport { UserInput } from \"./interfaces\";\r\n\r\nconst userObj: UserInput = {};\r\nuserObj['posts'] = '';\r\n\r\ndocument.querySelector('.a-link')?.addEventListener('click', () =>{\r\n    location.replace('/index.html');\r\n});\r\n\r\ndocument.querySelectorAll('.image-select img').forEach(img => {\r\n    img.addEventListener('click', () => {\r\n        console.log(img.ariaValueText);\r\n        if (img.ariaValueText !== null) {\r\n            userObj['imgUrl'] = img.ariaValueText;\r\n        }\r\n    });\r\n});\r\n\r\n//Get userinputs from register-form\r\nconst registerForm = document.querySelector('#register-form') as HTMLFormElement;\r\nregisterForm.addEventListener('submit', e => {\r\n    e.preventDefault();\r\n    document.querySelectorAll('input').forEach(input => {\r\n        if (input.value !== null && input.value !== '') {\r\n            userObj[input.name] = input.value;\r\n        }\r\n    });\r\n\r\n    registerHandler(userObj);\r\n});\r\n\r\n\r\n//Check if user exists in db\r\nasync function registerHandler(userObj: UserInput) {\r\n    const foundUser: Object = await findUserInDb(userObj);\r\n    console.log('HÄÄÄÄÄÄ',isEmpty(foundUser));\r\n    if (!isEmpty(foundUser)) {\r\n        addUserToDb(userObj);\r\n\r\n        //Add animation? \r\n        setTimeout(() => {\r\n            location.replace('../index.html');\r\n        }, 1000);\r\n    } else {\r\n        //Prompt message to user\r\n        console.log('User already exists');\r\n    }\r\n}\r\n\r\n\r\n    \r\n"],"names":["async","$14f6629ccf7de9b8$export$31fab651fc2b928c","userObj","users","$14f6629ccf7de9b8$export$69093b9c569a5b5b","console","log","userFound","user","$14f6629ccf7de9b8$var$validateUser","response","fetch","json","$14f6629ccf7de9b8$export$e13b0b8487db8de","index","length","url","init","method","body","JSON","stringify","headers","data","$f4150c8357e710ec$var$userObj","document","querySelector","addEventListener","location","replace","querySelectorAll","forEach","img","ariaValueText","e","preventDefault","input","value","name","foundUser","$kOHZq","isEmpty","setTimeout","$f4150c8357e710ec$var$registerHandler"],"version":3,"file":"createAccount.a0785f7f.js.map"}