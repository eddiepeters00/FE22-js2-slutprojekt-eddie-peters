{"mappings":"goBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAqB,CAAC,EAC5BC,QAAQC,IAAI,SA+BZ,SAASC,EAAQC,GAGX,OAFFH,QAAQC,IAAI,UAAWE,GACvBH,QAAQC,IAAgC,IAA5BG,OAAOC,KAAKF,GAAKG,QACQ,IAA5BF,OAAOC,KAAKF,GAAKG,MAC9B,CAhCmBC,SAASC,cAAc,QAC/BC,iBAAiB,UAAUC,IAClCA,EAAEC,iBAEFJ,SAASK,iBAAiB,SAASC,SAAQC,IACnB,OAAhBA,EAAMC,OAAkC,KAAhBD,EAAMC,QAC9BhB,EAAQe,EAAME,MAAQF,EAAMC,MAAK,IAQ7CE,eAA4BC,GACxBlB,QAAQC,IAAIiB,GACZ,MAAMC,QAA0B,EAAAtB,EAAAuB,cAAaF,GACxChB,EAAQiB,IAGTnB,QAAQC,IAAI,iBACZoB,aAAaC,QAAQ,OAAQC,KAAKC,UAAUpB,OAAOqB,OAAON,KAC1DO,SAASC,QAAQ,yDAJjB3B,QAAQC,IAAI,QAMpB,CAfQ2B,CAAa7B,EAAA,G,sCCbrBkB,eAAeY,EAAaX,GACxB,MAAMY,QAAcC,IAEpB,OADA/B,QAAQC,IAAI6B,GAgDhB,SAAsBA,EAAmBZ,GACrC,IAAIc,EAAY,CAAC,EAGjB,GAFAhC,QAAQC,IAAI6B,GACZ9B,QAAQC,IAAI,cACE,OAAV6B,EACA,IAAK,MAAMG,KAAQH,EACJ,OAARG,GACKA,EAAK,WAAgBf,EAAQ,UAAee,EAAK,WAAgBf,EAAQ,WACzElB,QAAQC,IAAI,eACZ+B,EAAYC,EACZjC,QAAQC,IAAI+B,SAMxBhC,QAAQC,IAAI,kBAEhB,OAAO+B,CACX,CAlEWE,CAAaJ,EAAOZ,EAC/B,CAGAD,eAAec,IACX,MACMI,QAAiBC,MADH,sFAGpB,aADoBD,EAASE,MAEjC,CAGApB,eAAeqB,EAAaL,GACxB,MAAMM,QAAiBR,IACvB,IAAK,IAAIS,EAAY,EAAGA,EAAID,EAASjC,OAAQkC,IAAK,CAChD,MAAMC,EAAcF,EAASC,GAC7B,GAAIC,QAAwBC,IAATT,GAAsBQ,EAAYE,WAAaV,EAAKW,cACrE,OAAOJ,CAEX,CACF,CAEFvB,eAAe4B,EAAeC,GAC1B9C,QAAQC,IAAI6C,GACZ,MAAMC,EAAU,iFAAiFD,eAC3FX,QAAiBC,MAAMW,GACvBC,QAAcb,EAASE,OAE7B,OADArC,QAAQC,IAAI+C,GACLA,CACX,CAEA/B,eAAegC,EAAaC,EAAmBF,GAC3C,MAAMG,EAAM,iFAAiFD,eACvFE,EAAO,CACTC,OAAQ,MACRC,KAAM/B,KAAKC,UAAUwB,GACrBO,QAAS,CACL,eAAgB,oCAKlBC,SADiBpB,MAAMe,EAAKC,IACZf,OACtBrC,QAAQC,IAAIuD,EAChB,CAyBAvC,eAAewC,EAAYvC,GACvB,MAAMY,QAAcC,IACpB,IAAIe,EAAgB,EACN,OAAVhB,IACAgB,EAAQhB,EAAMxB,QAGlB,MAAM6C,EAAc,iFAAiFL,SAC/FM,EAAO,CACTC,OAAQ,MACRC,KAAM/B,KAAKC,UAAUN,GACrBqC,QAAS,CACL,eAAgB,oCAKlBC,SADiBpB,MAAMe,EAAKC,IACZf,OACtBrC,QAAQC,IAAIuD,EAChB,CAGAvC,eAAeyC,EAAczB,GACzB,MAAMa,QAAcR,EAAaL,GAEjCG,MADY,iFAAiFU,SAClF,CACPO,OAAQ,UAEhB,C","sources":["src/modules/login.ts","src/modules/firebase.ts"],"sourcesContent":["import { findUserInDb } from \"./firebase\";\r\nimport { UserInput } from \"./interfaces\";\r\n\r\n\r\nconst userObj: UserInput = {};\r\nconsole.log('Start');\r\n\r\n//Get userinputs from register-form\r\nconst signInForm = document.querySelector('form') as HTMLFormElement;\r\nsignInForm.addEventListener('submit', e => {\r\n    e.preventDefault();\r\n\r\n    document.querySelectorAll('input').forEach(input => {\r\n        if (input.value !== null && input.value !== '') {\r\n            userObj[input.name] = input.value;\r\n        }\r\n    });\r\n        logInHandler(userObj);\r\n});\r\n\r\n\r\n//Check if user exists in db\r\nasync function logInHandler(userObj: UserInput) {\r\n    console.log(userObj);\r\n    const foundUser: Object = await findUserInDb(userObj);\r\n    if (!isEmpty(foundUser)) {\r\n        console.log('Error');\r\n    } else {\r\n        console.log('Logging in...');\r\n        localStorage.setItem('user', JSON.stringify(Object.values(foundUser)));\r\n        location.replace(\"/FE22-js2-slutprojekt-eddie-peters/html/profile.html\");\r\n    }\r\n}\r\n\r\n\r\n//Returns true if object is empty\r\nfunction isEmpty(obj: Object): boolean {\r\n    console.log('ISEMPTY', obj);\r\n    console.log(Object.keys(obj).length !== 0);\r\n      return Object.keys(obj).length !== 0;\r\n}\r\n\r\n\r\nexport { isEmpty };","import { User } from \"./User\";\r\nimport { Post, UserInfo, UserInput } from \"./interfaces\";\r\n\r\n\r\nasync function findUserInDb(userObj: UserInput): Promise<boolean | Object> {\r\n    const users = await getAllUsers();\r\n    console.log(users);\r\n    return validateUser(users, userObj);\r\n}\r\n\r\n\r\nasync function getAllUsers(): Promise<UserInfo[]> {\r\n    const url: string = 'https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users.json';\r\n    const response = await fetch(url);\r\n    const users = await response.json();\r\n    return users;\r\n}\r\n\r\n\r\nasync function getUserIndex(user: User): Promise<any> {\r\n    const allUsers = await getAllUsers();\r\n    for (let i: number = 0; i < allUsers.length; i++) {\r\n      const currentUser = allUsers[i];\r\n      if (currentUser && user !== undefined && currentUser.userName === user.getUserName()) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\nasync function getPostsFromDb(index: number): Promise<Post[]> {\r\n    console.log(index);\r\n    const postUrl = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${index}/posts.json`;\r\n    const response = await fetch(postUrl);\r\n    const posts = await response.json();\r\n    console.log(posts);\r\n    return posts;\r\n}\r\n\r\nasync function addPostsToDb(userIndex: number, posts: Post[]) {\r\n    const url = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${userIndex}/posts.json`;\r\n    const init = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(posts),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    }\r\n\r\n    const response = await fetch(url, init);\r\n    const data = response.json();\r\n    console.log(data);\r\n}\r\n\r\n\r\nfunction validateUser(users: UserInfo[], userObj: UserInput): Object {\r\n    let userFound = {};\r\n    console.log(users);\r\n    console.log('VALIDATION');\r\n    if (users !== null) {\r\n        for (const user of users) {\r\n            if(user!== null){\r\n                if (user[\"userName\"] === userObj[\"userName\"] && user[\"password\"] === userObj[\"password\"]) {\r\n                    console.log('User found!');\r\n                    userFound = user;\r\n                    console.log(userFound);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        console.log('user not found');\r\n    }\r\n    return userFound;\r\n}\r\n\r\n\r\nasync function addUserToDb(userObj: UserInput) {\r\n    const users = await getAllUsers();\r\n    let index: number = 0;\r\n    if (users !== null) {\r\n        index = users.length;\r\n    }\r\n\r\n    const url: string = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${index}.json`;\r\n    const init = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(userObj),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    }\r\n\r\n    const response = await fetch(url, init);\r\n    const data = response.json();\r\n    console.log(data);\r\n}\r\n\r\n\r\nasync function deleteAccount(user: User) {\r\n    const index = await getUserIndex(user);\r\n    const url = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${index}.json`;\r\n    fetch(url, {\r\n        method: 'DELETE',\r\n    });\r\n}\r\n\r\n\r\nexport { findUserInDb, addUserToDb, getAllUsers, getUserIndex, getPostsFromDb, addPostsToDb, deleteAccount };"],"names":["$k8Jq9","parcelRequire","$737e81580589129f$var$userObj","console","log","$737e81580589129f$export$dd1bc94b04021eeb","obj","Object","keys","length","document","querySelector","addEventListener","e","preventDefault","querySelectorAll","forEach","input","value","name","async","userObj","foundUser","findUserInDb","localStorage","setItem","JSON","stringify","values","location","replace","$737e81580589129f$var$logInHandler","$14f6629ccf7de9b8$export$31fab651fc2b928c","users","$14f6629ccf7de9b8$export$69093b9c569a5b5b","userFound","user","$14f6629ccf7de9b8$var$validateUser","response","fetch","json","$14f6629ccf7de9b8$export$ded32174b9143525","allUsers","i","currentUser","undefined","userName","getUserName","$14f6629ccf7de9b8$export$8a0e46d082bde07","index","postUrl","posts","$14f6629ccf7de9b8$export$e49f2def56dbb152","userIndex","url","init","method","body","headers","data","$14f6629ccf7de9b8$export$e13b0b8487db8de","$14f6629ccf7de9b8$export$45abfc3976589d02"],"version":3,"file":"login.01f796f4.js.map"}