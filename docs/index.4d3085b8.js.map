{"mappings":"gRAIAA,eAAeC,EAAaC,GACxB,MAAMC,QAAcC,IAEpB,OADAC,QAAQC,IAAIH,GAgDhB,SAAsBA,EAAmBD,GACrC,IAAIK,EAAY,CAAC,EAGjB,GAFAF,QAAQC,IAAIH,GACZE,QAAQC,IAAI,cACE,OAAVH,EACA,IAAK,MAAMK,KAAQL,EACJ,OAARK,GACKA,EAAK,WAAgBN,EAAQ,UAAeM,EAAK,WAAgBN,EAAQ,WACzEG,QAAQC,IAAI,eACZC,EAAYC,EACZH,QAAQC,IAAIC,SAMxBF,QAAQC,IAAI,kBAEhB,OAAOC,CACX,CAlEWE,CAAaN,EAAOD,EAC/B,CAGAF,eAAeI,IACX,MACMM,QAAiBC,MADH,sFAGpB,aADoBD,EAASE,MAEjC,C,iVCMA,IAAAC,EACAC,E,iFArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,ICpBAE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,kNCiDlD,SAASC,EAAQC,GAGlB,OAFFxB,QAAQC,IAAI,UAAWuB,GACvBxB,QAAQC,IAAgC,IAA5BY,OAAOD,KAAKY,GAAKT,QACQ,IAA5BF,OAAOD,KAAKY,GAAKT,MAC9B,CCrDiB,IAAAU,IAAoBN,EAAA,SAAAO,QAA6C,qBAAAC,KAAUC,WCA3E,IAAAH,IAAoBN,EAAA,SAAAO,QAA6C,qBAAAC,KAAUC,WCA3E,IAAAH,IAAoBN,EAAA,SAAAO,QAA6C,qBAAAC,KAAUC,WCA5F5B,QAAQC,IAAI,uBAKZ,MAAM4B,EAAqB,CAAC,EAGTC,SAASC,cAAc,QAC/BC,iBAAiB,UAAUC,IAClCA,EAAEC,iBAEFJ,SAASK,iBAAiB,SAASC,SAAQC,IACnB,OAAhBA,EAAMC,OAAkC,KAAhBD,EAAMC,QAC9BT,EAAQQ,EAAME,MAAQF,EAAMC,MAAK,IAQ7C3C,eAA4BE,GACxBG,QAAQC,IAAIJ,GACZ,MAAM2C,QAA0B5C,EAAaC,GACxC0B,EAAQiB,IAGTxC,QAAQC,IAAI,iBACZwC,aAAaC,QAAQ,OAAQrB,KAAKsB,UAAU9B,OAAO+B,OAAOJ,KAC1DK,SAASC,QAAQ,yDAJjB9C,QAAQC,IAAI,QAMpB,CAfQ8C,CAAalB,EAAA","sources":["src/modules/firebase.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-519d407b51d59663.js","src/modules/interfaces.ts","node_modules/@parcel/runtime-js/lib/runtime-adf76a274d2c81aa.js","node_modules/@parcel/runtime-js/lib/runtime-00ea9d7330907113.js","node_modules/@parcel/runtime-js/lib/runtime-f86589aba10b3cb3.js","src/index.ts"],"sourcesContent":["import { User } from \"./User\";\r\nimport { Post, UserInfo, UserInput } from \"./interfaces\";\r\n\r\n\r\nasync function findUserInDb(userObj: UserInput): Promise<boolean | Object> {\r\n    const users = await getAllUsers();\r\n    console.log(users);\r\n    return validateUser(users, userObj);\r\n}\r\n\r\n\r\nasync function getAllUsers(): Promise<UserInfo[]> {\r\n    const url: string = 'https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users.json';\r\n    const response = await fetch(url);\r\n    const users = await response.json();\r\n    return users;\r\n}\r\n\r\n\r\nasync function getUserIndex(user: User): Promise<any> {\r\n    const allUsers = await getAllUsers();\r\n    for (let i: number = 0; i < allUsers.length; i++) {\r\n      const currentUser = allUsers[i];\r\n      if (currentUser && user !== undefined && currentUser.userName === user.getUserName()) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\nasync function getPostsFromDb(index: number): Promise<Post[]> {\r\n    console.log(index);\r\n    const postUrl = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${index}/posts.json`;\r\n    const response = await fetch(postUrl);\r\n    const posts = await response.json();\r\n    console.log(posts);\r\n    return posts;\r\n}\r\n\r\nasync function addPostsToDb(userIndex: number, posts: Post[]) {\r\n    const url = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${userIndex}/posts.json`;\r\n    const init = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(posts),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    }\r\n\r\n    const response = await fetch(url, init);\r\n    const data = response.json();\r\n    console.log(data);\r\n}\r\n\r\n\r\nfunction validateUser(users: UserInfo[], userObj: UserInput): Object {\r\n    let userFound = {};\r\n    console.log(users);\r\n    console.log('VALIDATION');\r\n    if (users !== null) {\r\n        for (const user of users) {\r\n            if(user!== null){\r\n                if (user[\"userName\"] === userObj[\"userName\"] && user[\"password\"] === userObj[\"password\"]) {\r\n                    console.log('User found!');\r\n                    userFound = user;\r\n                    console.log(userFound);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        console.log('user not found');\r\n    }\r\n    return userFound;\r\n}\r\n\r\n\r\nasync function addUserToDb(userObj: UserInput) {\r\n    const users = await getAllUsers();\r\n    let index: number = 0;\r\n    if (users !== null) {\r\n        index = users.length;\r\n    }\r\n\r\n    const url: string = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${index}.json`;\r\n    const init = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(userObj),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    }\r\n\r\n    const response = await fetch(url, init);\r\n    const data = response.json();\r\n    console.log(data);\r\n}\r\n\r\n\r\nasync function deleteAccount(user: User) {\r\n    const index = await getUserIndex(user);\r\n    const url = `https://js2-social-media-default-rtdb.europe-west1.firebasedatabase.app/users/${index}.json`;\r\n    fetch(url, {\r\n        method: 'DELETE',\r\n    });\r\n}\r\n\r\n\r\nexport { findUserInDb, addUserToDb, getAllUsers, getUserIndex, getPostsFromDb, addPostsToDb, deleteAccount };","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"l1gf1\\\":\\\"index.4d3085b8.js\\\",\\\"bUv6T\\\":\\\"cat-profile.531b76bc.jpg\\\",\\\"4all4\\\":\\\"mona-profile.898dc249.jpg\\\",\\\"jqkbg\\\":\\\"thing-profile.9db302f0.jpg\\\"}\"));","import { User } from \"./User\";\r\n\r\nexport interface UserInput{\r\n    [key: string]: string;\r\n};\r\n\r\nexport interface UserInfo{\r\n    readonly name: string,\r\n    readonly userName: string,\r\n    readonly password: string,\r\n    readonly imgUrl: string,\r\n    posts: Post[]\r\n}\r\n\r\nexport interface Post {\r\n    sender: string,\r\n    date: string,\r\n    message: string\r\n}\r\n\r\n//Creating a new User-object\r\nexport function createNewUser(localUser: string) {\r\n    const storedUserInfo = localStorage.getItem(localUser);\r\n    console.log(storedUserInfo);\r\n    if (storedUserInfo !== null) {\r\n        if(localUser === 'user'){\r\n            const userInfo: string[] = JSON.parse(storedUserInfo);\r\n            if(typeof userInfo[3] == 'object' || userInfo[3] === ''){\r\n                const user: User = new User(userInfo[0], userInfo[1], userInfo[2], userInfo[4]);\r\n                console.log(user);\r\n                return user;\r\n            }\r\n            else{\r\n                const user: User = new User(userInfo[0], userInfo[1], userInfo[2], userInfo[3]);\r\n                console.log(user);\r\n                return user;\r\n            }\r\n        }else{\r\n            const userInfo: string[] = JSON.parse(storedUserInfo);\r\n            const user: User = new User(userInfo[2], userInfo[0], 'password', userInfo[1]);\r\n            console.log(user);\r\n            return user;\r\n        }\r\n    }\r\n    return;\r\n}\r\n\r\n\r\n//Returns true if object is empty\r\nexport function isEmpty(obj: Object): boolean {\r\n    console.log('ISEMPTY', obj);\r\n    console.log(Object.keys(obj).length !== 0);\r\n      return Object.keys(obj).length !== 0;\r\n}\r\n\r\n\r\nexport function placeImg(imgElement: HTMLImageElement, imgURL: string): void {\r\n    let imgUrl: URL = new URL('../images/cat-profile.jpg', import.meta.url);\r\n\r\n    switch (imgURL) {\r\n        case '../images/cat-profile.jpg': \r\n            imgUrl = new URL('../images/cat-profile.jpg', import.meta.url);\r\n            imgElement.src = imgUrl.href;\r\n            break;\r\n\r\n        case '../images/mona-profile.jpg':\r\n            imgUrl = new URL('../images/mona-profile.jpg', import.meta.url);\r\n            imgElement.src = imgUrl.href;\r\n            break;\r\n\r\n        case '../images/thing-profile.jpg':\r\n            imgUrl = new URL('../images/thing-profile.jpg', import.meta.url);\r\n            imgElement.src = imgUrl.href;\r\n            break;\r\n\r\n        default:\r\n            console.log('URL is not recognized');\r\n            break;\r\n    }\r\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bUv6T\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4all4\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jqkbg\")).toString();","console.log('Index.ts is running');\r\n\r\nimport { findUserInDb } from \"../src/modules/firebase\";\r\nimport { UserInput, isEmpty } from \"../src/modules/interfaces\";\r\n\r\nconst userObj: UserInput = {};\r\n\r\n//Get userinputs from register-form\r\nconst signInForm = document.querySelector('form') as HTMLFormElement;\r\nsignInForm.addEventListener('submit', e => {\r\n    e.preventDefault();\r\n\r\n    document.querySelectorAll('input').forEach(input => {\r\n        if (input.value !== null && input.value !== '') {\r\n            userObj[input.name] = input.value;\r\n        }\r\n    });\r\n        logInHandler(userObj);\r\n});\r\n\r\n\r\n//Check if user exists in db\r\nasync function logInHandler(userObj: UserInput) {\r\n    console.log(userObj);\r\n    const foundUser: Object = await findUserInDb(userObj);\r\n    if (!isEmpty(foundUser)) {\r\n        console.log('Error');\r\n    } else {\r\n        console.log('Logging in...');\r\n        localStorage.setItem('user', JSON.stringify(Object.values(foundUser)));\r\n        location.replace(\"/FE22-js2-slutprojekt-eddie-peters/html/profile.html\");\r\n    }\r\n}\r\n"],"names":["async","$14f6629ccf7de9b8$export$31fab651fc2b928c","userObj","users","$14f6629ccf7de9b8$export$69093b9c569a5b5b","console","log","userFound","user","$14f6629ccf7de9b8$var$validateUser","response","fetch","json","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$577091c3d8cb4c9b$export$dd1bc94b04021eeb","obj","URL","resolve","url","toString","$b4e14b6b8da86996$var$userObj","document","querySelector","addEventListener","e","preventDefault","querySelectorAll","forEach","input","value","name","foundUser","localStorage","setItem","stringify","values","location","replace","$b4e14b6b8da86996$var$logInHandler"],"version":3,"file":"index.4d3085b8.js.map"}